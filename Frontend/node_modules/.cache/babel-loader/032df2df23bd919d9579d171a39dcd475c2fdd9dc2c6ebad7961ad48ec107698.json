{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectSem2BullXit\\\\ProjectSem2\\\\Frontend\\\\src\\\\components\\\\pages\\\\PaymentSuccess.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { CartContext } from '../../App';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle, faShoppingBag, faHome, faBoxOpen, faMapMarkerAlt, faCalendarAlt, faMoneyBill, faReceipt } from '@fortawesome/free-solid-svg-icons';\nimport '../../styles/PaymentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentSuccess = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [orderDetails, setOrderDetails] = useState(null);\n  const [paymentProcessed, setPaymentProcessed] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    setCartItems\n  } = useContext(CartContext);\n  useEffect(() => {\n    // Prevent duplicate API calls\n    if (paymentProcessed) {\n      return;\n    }\n    const completePayment = async () => {\n      try {\n        // Get URL parameters\n        const params = new URLSearchParams(location.search);\n\n        // Parse all possible parameter variations\n        const paymentId = params.get('paymentId') || params.get('token');\n        const payerId = params.get('PayerID') || params.get('payerId');\n        const orderId = params.get('orderId'); // Get orderId from URL\n        // const customerId = params.get('customerId'); // No longer needed\n        // const addressId = params.get('addressId');   // No longer needed\n\n        console.log('URL parameters:', location.search);\n        console.log('Parsed parameters:', {\n          paymentId,\n          payerId,\n          orderId\n        }); // Log orderId\n\n        // Check if we have the required parameters\n        if (!orderId) {\n          // Check for orderId\n          throw new Error(`Missing orderId from URL parameters. Payment cannot be completed.`);\n        }\n\n        // If we're missing PayPal parameters, show an error\n        if (!paymentId) {\n          throw new Error('Missing PayPal payment ID. Payment cannot be completed.');\n        }\n        if (!payerId) {\n          throw new Error('Missing PayPal Payer ID. Payment cannot be completed.');\n        }\n\n        // Convert string ID to number for backend\n        const orderIdNum = parseInt(orderId, 10); // Parse orderId\n        // const customerIdNum = parseInt(customerId, 10); // Removed as customerId is no longer used\n        // const addressIdNum = parseInt(addressId, 10);   // Removed as addressId is no longer used\n\n        console.log('Completing PayPal payment with:', {\n          paymentId,\n          payerId,\n          orderId: orderIdNum\n        }); // Log orderIdNum\n\n        try {\n          // Check local storage for existing order details to avoid duplicate API calls\n          const storedOrderDetails = localStorage.getItem('lastCompletedOrder');\n          if (storedOrderDetails) {\n            const parsedOrder = JSON.parse(storedOrderDetails);\n            // Check if this is the same payment ID\n            if (parsedOrder.paymentId === paymentId) {\n              console.log('Found existing order details in local storage:', parsedOrder);\n              setOrderDetails(parsedOrder.order);\n              setPaymentProcessed(true);\n              setLoading(false);\n              return;\n            }\n          }\n\n          // Call backend to complete payment - use the full, correct URL\n          console.log('Sending request to backend with params:', {\n            paymentId,\n            PayerID: payerId,\n            customerId: customerIdNum,\n            addressId: addressIdNum\n          });\n          const response = await axios.post('http://localhost:8080/api/paypal/complete', {},\n          // Empty body instead of null\n          {\n            params: {\n              orderId: orderIdNum,\n              // Send orderId\n              paymentId: paymentId,\n              PayerID: payerId\n              // customerId: customerIdNum, // Removed\n              // addressId: addressIdNum    // Removed\n            }\n          });\n          console.log('Payment completed successfully:', response.data);\n          setOrderDetails(response.data.order);\n\n          // Store order details in local storage to prevent duplicate processing\n          localStorage.setItem('lastCompletedOrder', JSON.stringify({\n            paymentId,\n            order: response.data.order,\n            timestamp: new Date().toISOString()\n          }));\n\n          // Clear cart items after successful payment\n          setCartItems([]);\n\n          // Mark payment as processed to prevent duplicate calls\n          setPaymentProcessed(true);\n          setLoading(false);\n        } catch (err) {\n          console.error('Error completing payment:', err.response ? err.response.data : err.message);\n\n          // Check if this is a \"Cart is empty\" error, which likely means payment was already processed\n          if (err.response && err.response.data && err.response.data.includes('Cart is empty')) {\n            console.log('Cart is empty error - payment likely already processed');\n\n            // Try to fetch order details from backend using the payment ID\n            try {\n              const orderResponse = await axios.get(`http://localhost:8080/api/orders/by-payment/${paymentId}`);\n              if (orderResponse.data) {\n                setOrderDetails(orderResponse.data);\n                setPaymentProcessed(true);\n                setLoading(false);\n                return;\n              }\n            } catch (orderErr) {\n              console.error('Failed to fetch order by payment ID:', orderErr);\n            }\n\n            // If we can't get the order details, show a generic success message\n            setOrderDetails({\n              id: 'unknown',\n              total: 'See order history',\n              items: [],\n              status: 'COMPLETED',\n              paymentMethod: 'PAYPAL',\n              transactionId: paymentId\n            });\n            setPaymentProcessed(true);\n            setLoading(false);\n            return;\n          }\n          setError(err.response ? `${err.response.status} ${err.response.statusText}: ${JSON.stringify(err.response.data)}` : err.message);\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error('Error completing payment:', err);\n        setError(err.message || 'Failed to complete payment');\n        setLoading(false);\n      }\n    };\n    completePayment();\n  }, [location.search, setCartItems, paymentProcessed]);\n  const handleContinueShopping = () => {\n    navigate('/');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-result-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Processing Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please wait while we complete your order...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-result-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-result-card error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimesCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: () => navigate('/cart'),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faShoppingBag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), \" Return to Cart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-result-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-result-card success\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCheckCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), orderDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faReceipt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), \" Order Details\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-info-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faReceipt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), \" Order ID:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: orderDetails.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faMoneyBill\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), \" Total Amount:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: [\"$\", orderDetails.totalAmount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"order-info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-label\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCalendarAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), \" Order Date:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-value\",\n              children: new Date(orderDetails.orderDate).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faBoxOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), \" Items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"order-items-list\",\n          children: orderDetails.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item-name\",\n              children: [item.product.name, \" x \", item.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item-price\",\n              children: [\"$\", (item.product.price * item.quantity).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMapMarkerAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), \" Shipping Address\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"shipping-address\",\n          children: [orderDetails.shippingAddress.street, \", \", orderDetails.shippingAddress.city, \", \", orderDetails.shippingAddress.state, \" \", orderDetails.shippingAddress.zipCode, \", \", orderDetails.shippingAddress.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: handleContinueShopping,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), \" Continue Shopping\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/orders\",\n          className: \"secondary-button\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faBoxOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), \" View Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentSuccess, \"vfP2/AN6Uomid4SB611+oF8KmPM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PaymentSuccess;\nexport default PaymentSuccess;\nvar _c;\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useLocation","useNavigate","Link","axios","CartContext","FontAwesomeIcon","faCheckCircle","faTimesCircle","faShoppingBag","faHome","faBoxOpen","faMapMarkerAlt","faCalendarAlt","faMoneyBill","faReceipt","jsxDEV","_jsxDEV","PaymentSuccess","_s","loading","setLoading","error","setError","orderDetails","setOrderDetails","paymentProcessed","setPaymentProcessed","location","navigate","setCartItems","completePayment","params","URLSearchParams","search","paymentId","get","payerId","orderId","console","log","Error","orderIdNum","parseInt","storedOrderDetails","localStorage","getItem","parsedOrder","JSON","parse","order","PayerID","customerId","customerIdNum","addressId","addressIdNum","response","post","data","setItem","stringify","timestamp","Date","toISOString","err","message","includes","orderResponse","orderErr","id","total","items","status","paymentMethod","transactionId","statusText","handleContinueShopping","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","totalAmount","toFixed","orderDate","toLocaleString","orderItems","map","item","product","name","quantity","price","shippingAddress","street","city","state","zipCode","country","to","_c","$RefreshReg$"],"sources":["D:/projectSem2BullXit/ProjectSem2/Frontend/src/components/pages/PaymentSuccess.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { CartContext } from '../../App';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faTimesCircle, faShoppingBag, faHome, faBoxOpen, faMapMarkerAlt, faCalendarAlt, faMoneyBill, faReceipt } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../styles/PaymentPage.css';\r\n\r\nconst PaymentSuccess = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [orderDetails, setOrderDetails] = useState(null);\r\n  const [paymentProcessed, setPaymentProcessed] = useState(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { setCartItems } = useContext(CartContext);\r\n\r\n  useEffect(() => {\r\n    // Prevent duplicate API calls\r\n    if (paymentProcessed) {\r\n      return;\r\n    }\r\n    \r\n    const completePayment = async () => {\r\n      try {\r\n        // Get URL parameters\r\n        const params = new URLSearchParams(location.search);\r\n        \r\n        // Parse all possible parameter variations\r\n        const paymentId = params.get('paymentId') || params.get('token');\r\n        const payerId = params.get('PayerID') || params.get('payerId');\r\n        const orderId = params.get('orderId'); // Get orderId from URL\r\n        // const customerId = params.get('customerId'); // No longer needed\r\n        // const addressId = params.get('addressId');   // No longer needed\r\n\r\n        console.log('URL parameters:', location.search);\r\n        console.log('Parsed parameters:', { paymentId, payerId, orderId }); // Log orderId\r\n        \r\n        // Check if we have the required parameters\r\n        if (!orderId) { // Check for orderId\r\n          throw new Error(`Missing orderId from URL parameters. Payment cannot be completed.`);\r\n        }\r\n        \r\n        // If we're missing PayPal parameters, show an error\r\n        if (!paymentId) {\r\n          throw new Error('Missing PayPal payment ID. Payment cannot be completed.');\r\n        }\r\n        \r\n        if (!payerId) {\r\n          throw new Error('Missing PayPal Payer ID. Payment cannot be completed.');\r\n        }\r\n        \r\n        // Convert string ID to number for backend\r\n        const orderIdNum = parseInt(orderId, 10); // Parse orderId\r\n        // const customerIdNum = parseInt(customerId, 10); // Removed as customerId is no longer used\r\n        // const addressIdNum = parseInt(addressId, 10);   // Removed as addressId is no longer used\r\n\r\n        console.log('Completing PayPal payment with:', { paymentId, payerId, orderId: orderIdNum }); // Log orderIdNum\r\n\r\n        try {\r\n          // Check local storage for existing order details to avoid duplicate API calls\r\n          const storedOrderDetails = localStorage.getItem('lastCompletedOrder');\r\n          if (storedOrderDetails) {\r\n            const parsedOrder = JSON.parse(storedOrderDetails);\r\n            // Check if this is the same payment ID\r\n            if (parsedOrder.paymentId === paymentId) {\r\n              console.log('Found existing order details in local storage:', parsedOrder);\r\n              setOrderDetails(parsedOrder.order);\r\n              setPaymentProcessed(true);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n          }\r\n          \r\n          // Call backend to complete payment - use the full, correct URL\r\n          console.log('Sending request to backend with params:', {\r\n            paymentId,\r\n            PayerID: payerId,\r\n            customerId: customerIdNum,\r\n            addressId: addressIdNum\r\n          });\r\n          \r\n          const response = await axios.post(\r\n            'http://localhost:8080/api/paypal/complete',\r\n            {},  // Empty body instead of null\r\n            {\r\n              params: {\r\n                orderId: orderIdNum, // Send orderId\r\n                paymentId: paymentId,\r\n                PayerID: payerId\r\n                // customerId: customerIdNum, // Removed\r\n                // addressId: addressIdNum    // Removed\r\n              }\r\n            }\r\n          );\r\n          \r\n          console.log('Payment completed successfully:', response.data);\r\n          setOrderDetails(response.data.order);\r\n          \r\n          // Store order details in local storage to prevent duplicate processing\r\n          localStorage.setItem('lastCompletedOrder', JSON.stringify({\r\n            paymentId,\r\n            order: response.data.order,\r\n            timestamp: new Date().toISOString()\r\n          }));\r\n          \r\n          // Clear cart items after successful payment\r\n          setCartItems([]);\r\n          \r\n          // Mark payment as processed to prevent duplicate calls\r\n          setPaymentProcessed(true);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          console.error('Error completing payment:', err.response ? err.response.data : err.message);\r\n          \r\n          // Check if this is a \"Cart is empty\" error, which likely means payment was already processed\r\n          if (err.response && err.response.data && err.response.data.includes('Cart is empty')) {\r\n            console.log('Cart is empty error - payment likely already processed');\r\n            \r\n            // Try to fetch order details from backend using the payment ID\r\n            try {\r\n              const orderResponse = await axios.get(`http://localhost:8080/api/orders/by-payment/${paymentId}`);\r\n              if (orderResponse.data) {\r\n                setOrderDetails(orderResponse.data);\r\n                setPaymentProcessed(true);\r\n                setLoading(false);\r\n                return;\r\n              }\r\n            } catch (orderErr) {\r\n              console.error('Failed to fetch order by payment ID:', orderErr);\r\n            }\r\n            \r\n            // If we can't get the order details, show a generic success message\r\n            setOrderDetails({\r\n              id: 'unknown',\r\n              total: 'See order history',\r\n              items: [],\r\n              status: 'COMPLETED',\r\n              paymentMethod: 'PAYPAL',\r\n              transactionId: paymentId\r\n            });\r\n            setPaymentProcessed(true);\r\n            setLoading(false);\r\n            return;\r\n          }\r\n          \r\n          setError(err.response ? `${err.response.status} ${err.response.statusText}: ${JSON.stringify(err.response.data)}` : err.message);\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error completing payment:', err);\r\n        setError(err.message || 'Failed to complete payment');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    completePayment();\r\n  }, [location.search, setCartItems, paymentProcessed]);\r\n\r\n  const handleContinueShopping = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"payment-result-container\">\r\n        <div className=\"payment-result-card\">\r\n          <h2>Processing Payment</h2>\r\n          <div className=\"loader\"></div>\r\n          <p>Please wait while we complete your order...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"payment-result-container\">\r\n        <div className=\"payment-result-card error\">\r\n          <h2>Payment Failed</h2>\r\n          <div className=\"error-icon\">\r\n            <FontAwesomeIcon icon={faTimesCircle} />\r\n          </div>\r\n          <p className=\"error-message\">{error}</p>\r\n          <div className=\"action-buttons\">\r\n            <button className=\"primary-button\" onClick={() => navigate('/cart')}>\r\n              <FontAwesomeIcon icon={faShoppingBag} /> Return to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"payment-result-container\">\r\n      <div className=\"payment-result-card success\">\r\n        <h2>Payment Successful!</h2>\r\n        <div className=\"success-icon\">\r\n          <FontAwesomeIcon icon={faCheckCircle} />\r\n        </div>\r\n        \r\n        {orderDetails && (\r\n          <div className=\"order-details\">\r\n            <h3>\r\n              <FontAwesomeIcon icon={faReceipt} /> Order Details\r\n            </h3>\r\n            \r\n            <div className=\"order-info-grid\">\r\n              <div className=\"order-info-item\">\r\n                <span className=\"info-label\">\r\n                  <FontAwesomeIcon icon={faReceipt} /> Order ID:\r\n                </span>\r\n                <span className=\"info-value\">{orderDetails.id}</span>\r\n              </div>\r\n              \r\n              <div className=\"order-info-item\">\r\n                <span className=\"info-label\">\r\n                  <FontAwesomeIcon icon={faMoneyBill} /> Total Amount:\r\n                </span>\r\n                <span className=\"info-value\">${orderDetails.totalAmount.toFixed(2)}</span>\r\n              </div>\r\n              \r\n              <div className=\"order-info-item\">\r\n                <span className=\"info-label\">\r\n                  <FontAwesomeIcon icon={faCalendarAlt} /> Order Date:\r\n                </span>\r\n                <span className=\"info-value\">{new Date(orderDetails.orderDate).toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <h4>\r\n              <FontAwesomeIcon icon={faBoxOpen} /> Items\r\n            </h4>\r\n            <ul className=\"order-items-list\">\r\n              {orderDetails.orderItems.map(item => (\r\n                <li key={item.id}>\r\n                  <span className=\"item-name\">{item.product.name} x {item.quantity}</span>\r\n                  <span className=\"item-price\">${(item.product.price * item.quantity).toFixed(2)}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            \r\n            <h4>\r\n              <FontAwesomeIcon icon={faMapMarkerAlt} /> Shipping Address\r\n            </h4>\r\n            <p className=\"shipping-address\">\r\n              {orderDetails.shippingAddress.street}, {orderDetails.shippingAddress.city}, {orderDetails.shippingAddress.state} {orderDetails.shippingAddress.zipCode}, {orderDetails.shippingAddress.country}\r\n            </p>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"action-buttons\">\r\n          <button className=\"primary-button\" onClick={handleContinueShopping}>\r\n            <FontAwesomeIcon icon={faHome} /> Continue Shopping\r\n          </button>\r\n          <Link to=\"/orders\" className=\"secondary-button\">\r\n            <FontAwesomeIcon icon={faBoxOpen} /> View Orders\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSuccess;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}