{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectSem2BullXit\\\\ProjectSem2\\\\Frontend\\\\src\\\\components\\\\admin\\\\AdminProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminProtectedRoute = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in as admin\n    const checkAdminStatus = () => {\n      const adminUser = localStorage.getItem('adminUser');\n      if (!adminUser) {\n        setIsAdmin(false);\n        setLoading(false);\n        return;\n      }\n      try {\n        const user = JSON.parse(adminUser);\n        // Check if user has admin role\n        if (user.role === 'ADMIN' || user.role) {\n          setIsAdmin(true);\n        } else {\n          setIsAdmin(false);\n        }\n      } catch (error) {\n        console.error('Error parsing admin user data:', error);\n        setIsAdmin(false);\n      }\n      setLoading(false);\n    };\n    checkAdminStatus();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return isAdmin ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/admin/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 33\n  }, this);\n};\n_s(AdminProtectedRoute, \"6KDdLcDigPmSwSkIdwKPRNzyNvM=\");\n_c = AdminProtectedRoute;\nexport default AdminProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Outlet","jsxDEV","_jsxDEV","AdminProtectedRoute","_s","isAdmin","setIsAdmin","loading","setLoading","checkAdminStatus","adminUser","localStorage","getItem","user","JSON","parse","role","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/projectSem2BullXit/ProjectSem2/Frontend/src/components/admin/AdminProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst AdminProtectedRoute = () => {\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in as admin\n    const checkAdminStatus = () => {\n      const adminUser = localStorage.getItem('adminUser');\n      \n      if (!adminUser) {\n        setIsAdmin(false);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const user = JSON.parse(adminUser);\n        // Check if user has admin role\n        if (user.role === 'ADMIN' || user.role) {\n          setIsAdmin(true);\n        } else {\n          setIsAdmin(false);\n        }\n      } catch (error) {\n        console.error('Error parsing admin user data:', error);\n        setIsAdmin(false);\n      }\n      \n      setLoading(false);\n    };\n\n    checkAdminStatus();\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return isAdmin ? <Outlet /> : <Navigate to=\"/admin/login\" />;\n};\n\nexport default AdminProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAEnD,IAAI,CAACF,SAAS,EAAE;QACdJ,UAAU,CAAC,KAAK,CAAC;QACjBE,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,IAAI;QACF,MAAMK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;QAClC;QACA,IAAIG,IAAI,CAACG,IAAI,KAAK,OAAO,IAAIH,IAAI,CAACG,IAAI,EAAE;UACtCV,UAAU,CAAC,IAAI,CAAC;QAClB,CAAC,MAAM;UACLA,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDX,UAAU,CAAC,KAAK,CAAC;MACnB;MAEAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;EAEA,OAAOnB,OAAO,gBAAGH,OAAA,CAACF,MAAM;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGtB,OAAA,CAACH,QAAQ;IAAC0B,EAAE,EAAC;EAAc;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACpB,EAAA,CAvCID,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AAyCzB,eAAeA,mBAAmB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}