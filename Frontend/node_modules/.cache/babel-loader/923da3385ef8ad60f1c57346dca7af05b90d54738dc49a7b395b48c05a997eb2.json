{"ast":null,"code":"var _jsxFileName = \"D:\\\\projectSem2BullXit\\\\ProjectSem2\\\\Frontend\\\\src\\\\components\\\\admin\\\\AdminCategoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash, faPlus, faSave, faTimes, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport api from '../../services/api';\n\n// Mock data for categories in case the API fails\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MOCK_CATEGORIES = [{\n  id: 1,\n  name: 'Áo'\n}, {\n  id: 2,\n  name: 'Quần'\n}, {\n  id: 3,\n  name: 'Giày'\n}, {\n  id: 4,\n  name: 'Phụ kiện'\n}];\nconst AdminCategoryList = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [usingMockData, setUsingMockData] = useState(false);\n\n  // For adding new category\n  const [newCategory, setNewCategory] = useState({\n    name: ''\n  });\n  const [isAdding, setIsAdding] = useState(false);\n\n  // For editing category\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    name: ''\n  });\n\n  // For delete confirmation\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const fetchCategories = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Try to fetch from API\n      try {\n        const response = await api.get('/categories');\n        if (response.data && Array.isArray(response.data)) {\n          setCategories(response.data);\n          setUsingMockData(false);\n          return;\n        }\n      } catch (apiError) {\n        console.error('API Error fetching categories:', apiError);\n        // Fall through to use mock data\n      }\n\n      // If API fails, use mock data\n      console.log('Using mock category data as fallback');\n      setCategories(MOCK_CATEGORIES);\n      setUsingMockData(true);\n    } catch (err) {\n      console.error('Error in fetchCategories:', err);\n      setError('Failed to load categories. Using default categories.');\n      setCategories(MOCK_CATEGORIES);\n      setUsingMockData(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddInputChange = e => {\n    setNewCategory({\n      ...newCategory,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditInputChange = e => {\n    setEditFormData({\n      ...editFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddSubmit = async e => {\n    e.preventDefault();\n    if (!newCategory.name.trim()) {\n      setError('Category name is required');\n      return;\n    }\n\n    // If using mock data, just add to the local state\n    if (usingMockData) {\n      const newId = Math.max(...categories.map(c => c.id), 0) + 1;\n      const newCategoryWithId = {\n        id: newId,\n        name: newCategory.name.trim()\n      };\n      setCategories([...categories, newCategoryWithId]);\n      setNewCategory({\n        name: ''\n      });\n      setIsAdding(false);\n      setSuccess('Category added successfully (in mock mode)!');\n      setTimeout(() => setSuccess(null), 3000);\n      return;\n    }\n\n    // Otherwise try the API\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Make sure we're only sending the name property\n      const categoryData = {\n        name: newCategory.name.trim()\n      };\n      const response = await api.post('/categories', categoryData);\n      if (response.status === 201 || response.status === 200) {\n        // Refresh the categories list to ensure we have the latest data\n        await fetchCategories();\n        setNewCategory({\n          name: ''\n        });\n        setIsAdding(false);\n        setSuccess('Category added successfully!');\n        setTimeout(() => setSuccess(null), 3000);\n      } else {\n        throw new Error('Unexpected response status: ' + response.status);\n      }\n    } catch (err) {\n      var _err$response;\n      console.error('Error adding category:', err);\n      let errorMessage = 'Failed to add category. Please try again.';\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && _err$response.data) {\n        if (typeof err.response.data === 'string') {\n          errorMessage = err.response.data;\n        } else if (err.response.data.message) {\n          errorMessage = err.response.data.message;\n        }\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditClick = category => {\n    setEditingCategory(category.id);\n    setEditFormData({\n      name: category.name\n    });\n  };\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    if (!editFormData.name.trim()) {\n      setError('Category name is required');\n      return;\n    }\n\n    // If using mock data, just update the local state\n    if (usingMockData) {\n      setCategories(categories.map(category => category.id === editingCategory ? {\n        ...category,\n        name: editFormData.name.trim()\n      } : category));\n      setEditingCategory(null);\n      setSuccess('Category updated successfully (in mock mode)!');\n      setTimeout(() => setSuccess(null), 3000);\n      return;\n    }\n\n    // Otherwise try the API\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.put(`/categories/${editingCategory}`, editFormData);\n      if (response.status === 200) {\n        setCategories(categories.map(category => category.id === editingCategory ? response.data : category));\n        setEditingCategory(null);\n        setSuccess('Category updated successfully!');\n        setTimeout(() => setSuccess(null), 3000);\n      } else {\n        throw new Error('Unexpected response status: ' + response.status);\n      }\n    } catch (err) {\n      var _err$response2;\n      console.error('Error updating category:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || 'Failed to update category. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteClick = category => {\n    setCategoryToDelete(category);\n    setShowDeleteModal(true);\n  };\n  const handleDeleteConfirm = async () => {\n    if (!categoryToDelete) return;\n\n    // If using mock data, just update the local state\n    if (usingMockData) {\n      setCategories(categories.filter(c => c.id !== categoryToDelete.id));\n      setShowDeleteModal(false);\n      setCategoryToDelete(null);\n      setSuccess('Category deleted successfully (in mock mode)!');\n      setTimeout(() => setSuccess(null), 3000);\n      return;\n    }\n\n    // Otherwise try the API\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.delete(`/categories/${categoryToDelete.id}`);\n      if (response.status === 200) {\n        setCategories(categories.filter(c => c.id !== categoryToDelete.id));\n        setShowDeleteModal(false);\n        setCategoryToDelete(null);\n        setSuccess('Category deleted successfully!');\n        setTimeout(() => setSuccess(null), 3000);\n      } else {\n        throw new Error('Unexpected response status: ' + response.status);\n      }\n    } catch (err) {\n      var _err$response3, _err$response4;\n      console.error('Error deleting category:', err);\n      let errorMessage = 'Failed to delete category.';\n      if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 500) {\n        errorMessage = 'This category may be in use by products and cannot be deleted.';\n      } else if ((_err$response4 = err.response) !== null && _err$response4 !== void 0 && _err$response4.data) {\n        errorMessage = err.response.data;\n      }\n      setError(errorMessage);\n      setShowDeleteModal(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingCategory(null);\n    setError(null);\n  };\n  const handleCancelAdd = () => {\n    setIsAdding(false);\n    setNewCategory({\n      name: ''\n    });\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-category-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-category-btn\",\n        onClick: () => setIsAdding(true),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), \" Add Category\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }, this), usingMockData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning-message\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faExclamationTriangle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Using mock data. Changes will not be saved to the database.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), isAdding && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: newCategory.name,\n            onChange: handleAddInputChange,\n            placeholder: \"Enter category name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-btn\",\n            onClick: handleCancelAdd,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), \" Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-btn\",\n            disabled: loading,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), \" \", loading ? 'Adding...' : 'Add Category']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), loading && !categories.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading categories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: category.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingCategory === category.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleEditSubmit,\n                className: \"inline-edit-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  value: editFormData.name,\n                  onChange: handleEditInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-form-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"save-btn-sm\",\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faSave\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"cancel-btn-sm\",\n                    onClick: handleCancelEdit,\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faTimes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 25\n              }, this) : category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"action-buttons\",\n              children: editingCategory !== category.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-btn\",\n                  onClick: () => handleEditClick(category),\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEdit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  onClick: () => handleDeleteClick(category),\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTrash\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this)]\n          }, category.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              className: \"no-results\",\n              children: \"No categories found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete the category \\\"\", categoryToDelete === null || categoryToDelete === void 0 ? void 0 : categoryToDelete.name, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"warning-text\",\n          children: \"Warning: This will affect all products in this category.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowDeleteModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: handleDeleteConfirm,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminCategoryList, \"7qhvXNPiczy9tYRKfx+C6MPtFE0=\");\n_c = AdminCategoryList;\nexport default AdminCategoryList;\nvar _c;\n$RefreshReg$(_c, \"AdminCategoryList\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faEdit","faTrash","faPlus","faSave","faTimes","faExclamationTriangle","api","jsxDEV","_jsxDEV","Fragment","_Fragment","MOCK_CATEGORIES","id","name","AdminCategoryList","_s","categories","setCategories","loading","setLoading","error","setError","success","setSuccess","usingMockData","setUsingMockData","newCategory","setNewCategory","isAdding","setIsAdding","editingCategory","setEditingCategory","editFormData","setEditFormData","showDeleteModal","setShowDeleteModal","categoryToDelete","setCategoryToDelete","fetchCategories","response","get","data","Array","isArray","apiError","console","log","err","handleAddInputChange","e","target","value","handleEditInputChange","handleAddSubmit","preventDefault","trim","newId","Math","max","map","c","newCategoryWithId","setTimeout","categoryData","post","status","Error","_err$response","errorMessage","message","handleEditClick","category","handleEditSubmit","put","_err$response2","handleDeleteClick","handleDeleteConfirm","filter","delete","_err$response3","_err$response4","handleCancelEdit","handleCancelAdd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","onSubmit","htmlFor","type","onChange","placeholder","required","disabled","length","colSpan","_c","$RefreshReg$"],"sources":["D:/projectSem2BullXit/ProjectSem2/Frontend/src/components/admin/AdminCategoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash, faPlus, faSave, faTimes, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport api from '../../services/api';\n\n// Mock data for categories in case the API fails\nconst MOCK_CATEGORIES = [\n  { id: 1, name: 'Áo' },\n  { id: 2, name: 'Quần' },\n  { id: 3, name: 'Giày' },\n  { id: 4, name: 'Phụ kiện' }\n];\n\nconst AdminCategoryList = () => {\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [usingMockData, setUsingMockData] = useState(false);\n  \n  // For adding new category\n  const [newCategory, setNewCategory] = useState({ name: '' });\n  const [isAdding, setIsAdding] = useState(false);\n  \n  // For editing category\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editFormData, setEditFormData] = useState({ name: '' });\n  \n  // For delete confirmation\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [categoryToDelete, setCategoryToDelete] = useState(null);\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Try to fetch from API\n      try {\n        const response = await api.get('/categories');\n        if (response.data && Array.isArray(response.data)) {\n          setCategories(response.data);\n          setUsingMockData(false);\n          return;\n        }\n      } catch (apiError) {\n        console.error('API Error fetching categories:', apiError);\n        // Fall through to use mock data\n      }\n      \n      // If API fails, use mock data\n      console.log('Using mock category data as fallback');\n      setCategories(MOCK_CATEGORIES);\n      setUsingMockData(true);\n    } catch (err) {\n      console.error('Error in fetchCategories:', err);\n      setError('Failed to load categories. Using default categories.');\n      setCategories(MOCK_CATEGORIES);\n      setUsingMockData(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddInputChange = (e) => {\n    setNewCategory({ ...newCategory, [e.target.name]: e.target.value });\n  };\n\n  const handleEditInputChange = (e) => {\n    setEditFormData({ ...editFormData, [e.target.name]: e.target.value });\n  };\n\n  const handleAddSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!newCategory.name.trim()) {\n      setError('Category name is required');\n      return;\n    }\n    \n    // If using mock data, just add to the local state\n    if (usingMockData) {\n      const newId = Math.max(...categories.map(c => c.id), 0) + 1;\n      const newCategoryWithId = {\n        id: newId,\n        name: newCategory.name.trim()\n      };\n      \n      setCategories([...categories, newCategoryWithId]);\n      setNewCategory({ name: '' });\n      setIsAdding(false);\n      setSuccess('Category added successfully (in mock mode)!');\n      setTimeout(() => setSuccess(null), 3000);\n      return;\n    }\n    \n    // Otherwise try the API\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Make sure we're only sending the name property\n      const categoryData = { name: newCategory.name.trim() };\n      \n      const response = await api.post('/categories', categoryData);\n      \n      if (response.status === 201 || response.status === 200) {\n        // Refresh the categories list to ensure we have the latest data\n        await fetchCategories();\n        setNewCategory({ name: '' });\n        setIsAdding(false);\n        setSuccess('Category added successfully!');\n        setTimeout(() => setSuccess(null), 3000);\n      } else {\n        throw new Error('Unexpected response status: ' + response.status);\n      }\n    } catch (err) {\n      console.error('Error adding category:', err);\n      let errorMessage = 'Failed to add category. Please try again.';\n      \n      if (err.response?.data) {\n        if (typeof err.response.data === 'string') {\n          errorMessage = err.response.data;\n        } else if (err.response.data.message) {\n          errorMessage = err.response.data.message;\n        }\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditClick = (category) => {\n    setEditingCategory(category.id);\n    setEditFormData({ name: category.name });\n  };\n\n  const handleEditSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!editFormData.name.trim()) {\n      setError('Category name is required');\n      return;\n    }\n    \n    // If using mock data, just update the local state\n    if (usingMockData) {\n      setCategories(categories.map(category => \n        category.id === editingCategory ? { ...category, name: editFormData.name.trim() } : category\n      ));\n      \n      setEditingCategory(null);\n      setSuccess('Category updated successfully (in mock mode)!');\n      setTimeout(() => setSuccess(null), 3000);\n      return;\n    }\n    \n    // Otherwise try the API\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await api.put(`/categories/${editingCategory}`, editFormData);\n      \n      if (response.status === 200) {\n        setCategories(categories.map(category => \n          category.id === editingCategory ? response.data : category\n        ));\n        \n        setEditingCategory(null);\n        setSuccess('Category updated successfully!');\n        setTimeout(() => setSuccess(null), 3000);\n      } else {\n        throw new Error('Unexpected response status: ' + response.status);\n      }\n    } catch (err) {\n      console.error('Error updating category:', err);\n      setError(\n        err.response?.data || \n        'Failed to update category. Please try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteClick = (category) => {\n    setCategoryToDelete(category);\n    setShowDeleteModal(true);\n  };\n\n  const handleDeleteConfirm = async () => {\n    if (!categoryToDelete) return;\n    \n    // If using mock data, just update the local state\n    if (usingMockData) {\n      setCategories(categories.filter(c => c.id !== categoryToDelete.id));\n      setShowDeleteModal(false);\n      setCategoryToDelete(null);\n      setSuccess('Category deleted successfully (in mock mode)!');\n      setTimeout(() => setSuccess(null), 3000);\n      return;\n    }\n    \n    // Otherwise try the API\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await api.delete(`/categories/${categoryToDelete.id}`);\n      \n      if (response.status === 200) {\n        setCategories(categories.filter(c => c.id !== categoryToDelete.id));\n        setShowDeleteModal(false);\n        setCategoryToDelete(null);\n        setSuccess('Category deleted successfully!');\n        setTimeout(() => setSuccess(null), 3000);\n      } else {\n        throw new Error('Unexpected response status: ' + response.status);\n      }\n    } catch (err) {\n      console.error('Error deleting category:', err);\n      let errorMessage = 'Failed to delete category.';\n      \n      if (err.response?.status === 500) {\n        errorMessage = 'This category may be in use by products and cannot be deleted.';\n      } else if (err.response?.data) {\n        errorMessage = err.response.data;\n      }\n      \n      setError(errorMessage);\n      setShowDeleteModal(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingCategory(null);\n    setError(null);\n  };\n\n  const handleCancelAdd = () => {\n    setIsAdding(false);\n    setNewCategory({ name: '' });\n    setError(null);\n  };\n\n  return (\n    <div className=\"admin-category-list\">\n      <div className=\"category-header\">\n        <h2>Manage Categories</h2>\n        {!isAdding && (\n          <button \n            className=\"add-category-btn\"\n            onClick={() => setIsAdding(true)}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Add Category\n          </button>\n        )}\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n      {usingMockData && (\n        <div className=\"warning-message\">\n          <FontAwesomeIcon icon={faExclamationTriangle} />\n          <span>Using mock data. Changes will not be saved to the database.</span>\n        </div>\n      )}\n      \n      {isAdding && (\n        <div className=\"category-form\">\n          <form onSubmit={handleAddSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Category Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={newCategory.name}\n                onChange={handleAddInputChange}\n                placeholder=\"Enter category name\"\n                required\n              />\n            </div>\n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"cancel-btn\"\n                onClick={handleCancelAdd}\n              >\n                <FontAwesomeIcon icon={faTimes} /> Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"save-btn\"\n                disabled={loading}\n              >\n                <FontAwesomeIcon icon={faSave} /> {loading ? 'Adding...' : 'Add Category'}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n      \n      {loading && !categories.length ? (\n        <div className=\"loading\">Loading categories...</div>\n      ) : (\n        <div className=\"category-table-container\">\n          <table className=\"admin-table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {categories.length > 0 ? (\n                categories.map(category => (\n                  <tr key={category.id}>\n                    <td>{category.id}</td>\n                    <td>\n                      {editingCategory === category.id ? (\n                        <form onSubmit={handleEditSubmit} className=\"inline-edit-form\">\n                          <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={editFormData.name}\n                            onChange={handleEditInputChange}\n                            required\n                          />\n                          <div className=\"inline-form-actions\">\n                            <button type=\"submit\" className=\"save-btn-sm\">\n                              <FontAwesomeIcon icon={faSave} />\n                            </button>\n                            <button \n                              type=\"button\" \n                              className=\"cancel-btn-sm\"\n                              onClick={handleCancelEdit}\n                            >\n                              <FontAwesomeIcon icon={faTimes} />\n                            </button>\n                          </div>\n                        </form>\n                      ) : (\n                        category.name\n                      )}\n                    </td>\n                    <td className=\"action-buttons\">\n                      {editingCategory !== category.id && (\n                        <>\n                          <button \n                            className=\"edit-btn\"\n                            onClick={() => handleEditClick(category)}\n                          >\n                            <FontAwesomeIcon icon={faEdit} />\n                          </button>\n                          <button \n                            className=\"delete-btn\"\n                            onClick={() => handleDeleteClick(category)}\n                          >\n                            <FontAwesomeIcon icon={faTrash} />\n                          </button>\n                        </>\n                      )}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"3\" className=\"no-results\">\n                    No categories found.\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n      \n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>Confirm Delete</h3>\n            <p>Are you sure you want to delete the category \"{categoryToDelete?.name}\"?</p>\n            <p className=\"warning-text\">Warning: This will affect all products in this category.</p>\n            <div className=\"modal-actions\">\n              <button \n                className=\"cancel-btn\"\n                onClick={() => setShowDeleteModal(false)}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"delete-btn\"\n                onClick={handleDeleteConfirm}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminCategoryList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}